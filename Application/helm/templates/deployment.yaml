kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.ReplicaNumber }}
  selector:
    matchLabels:
      # set your lab user name
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        # set your lab user name
        app: {{ .Chart.Name }}
    spec:
      volumes:
        - name: index-html
          configMap:
            name: '{{ .Chart.Name }}-html'
            defaultMode: 420
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.containers.image }}:{{ .Values.containers.tag }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.containers.containerPort }}
              protocol: TCP
          env:
            - name: PORT
              value: {{ .Values.containers.containerPort | quote }}
          volumeMounts:
            - name: index-html
              mountPath: /tmp/html
          readinessProbe:
            httpGet:
              path: /health/readiness # this checks the application URL path
              port: {{ .Values.containers.containerPort }} # The port the application is listening on
              scheme: HTTP
            initialDelaySeconds: 1 # The time waiting before testing the application path
            timeoutSeconds: 1 # The timeout duration
            periodSeconds: 10 # The amount of time to wait between checks
            successThreshold: 1 # The count to declare successful
            failureThreshold: 3 # The count to declare failure
          livenessProbe:
            httpGet:
              path: /health/liveliness
              port: {{ .Values.containers.containerPort }}
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources: {}
          terminationMessagePath: /dev/termination-log
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10